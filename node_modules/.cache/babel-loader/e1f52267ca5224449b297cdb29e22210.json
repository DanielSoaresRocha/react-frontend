{"ast":null,"code":"import _slicedToArray from \"/home/daniel/\\xC1rea de Trabalho/semanaoministack10/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/daniel/\\xC1rea de Trabalho/semanaoministack10/frontend/src/App.js\";\nimport React, { useState } from 'react'; // Os três conceitos do react: \n// Componente : Bloco isolado de HTML, CSS e JS, o qual não interfere no restante da aplicação\n// Propriedade : Informações que um componente pai passa para um componente filho\n// Estado : \n\nfunction App() {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        counter = _useState2[0],\n        setCounter = _useState2[1];\n\n  function incrementaCaunter() {\n    setCounter(counter++);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"contador = \", counter), React.createElement(\"button\", {\n    onClick: incrementaCaunter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \" Incrementar\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/daniel/Área de Trabalho/semanaoministack10/frontend/src/App.js"],"names":["React","useState","App","counter","setCounter","incrementaCaunter"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CAEA;AACA;AACA;AACA;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACiBD,QAAQ,CAAC,CAAD,CADzB;AAAA;AAAA,QACNE,OADM;AAAA,QACGC,UADH;;AAGb,WAASC,iBAAT,GAA4B;AAC3BD,IAAAA,UAAU,CAACD,OAAO,EAAR,CAAV;AACA;;AAED,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBA,OAAhB,CADF,EAEE;AAAQ,IAAA,OAAO,EAAEE,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF;AAMD;;AAED,eAAeH,GAAf","sourcesContent":["import React, {useState} from 'react';\n\n// Os três conceitos do react: \n// Componente : Bloco isolado de HTML, CSS e JS, o qual não interfere no restante da aplicação\n// Propriedade : Informações que um componente pai passa para um componente filho\n// Estado : \n\nfunction App() {\n  const [counter, setCounter] = useState(0);\n\n  function incrementaCaunter(){\n   setCounter(counter++);\n  }\n\n  return (\n    <>\n      <h1>contador = {counter}</h1>\n      <button onClick={incrementaCaunter}> Incrementar</button> \n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}